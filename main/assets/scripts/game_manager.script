math.randomseed(os.time())

local ZOMBIE_FACTORY = '#zombie_factory'
local WOLF_FACTORY = '#wolf_factory'
local SLIME_FACTORY = '#slime_factory'
local VAMPIRE_FACTORY = '#vampire_factory'
local SKELETON_FACTORY = '#skeleton_factory'
local ROBBER_FACTORY = '#robber_factory'
local ORC_FACTORY = '#orc_factory'
local GOLEM_FACTORY = '#golem_factory'
local SNAKE_FACTORY = '#snake_factory'
local DRAGON_FACTORY = '#dragon_factory'
local CHEST_FACTORY = '#chest_factory'

local function create_random_enemy(self)
	local random_number = math.random(1,#self.enemies)
	self.id = factory.create(self.enemies[random_number])
	msg.post('/player#player', 'send_id_enemy', {id = self.id})
end



function init(self)
	msg.post("@render:", "use_fixed_fit_projection", {zoom = 4})
	msg.post('#end_game', 'disable')
	self.id =nil
	self.enemies = {ZOMBIE_FACTORY,WOLF_FACTORY,SLIME_FACTORY,VAMPIRE_FACTORY,SKELETON_FACTORY,ROBBER_FACTORY,ORC_FACTORY,GOLEM_FACTORY,SNAKE_FACTORY,DRAGON_FACTORY}
	self.level_of_dungeon = 1
	self.enemies_in_levels = math.random(3,5)
	self.curent_enemies_of_level = self.enemies_in_levels
	msg.post('/player#player', 'init_dungeon',{level_of_dungeon = self.level_of_dungeon,enemies_in_levels = self.enemies_in_levels})
	create_random_enemy(self)
end



function on_message(self, message_id, message, sender)
	if message_id == hash('create_new_enemy') and self.curent_enemies_of_level > 1  then
		self.curent_enemies_of_level = self.curent_enemies_of_level - 1
		msg.post('/player#player', 'current_enemies_count', {current_enemies_count = self.curent_enemies_of_level})
		create_random_enemy(self)
	elseif message_id == hash('create_new_enemy') and self.curent_enemies_of_level == 1 then
		self.curent_enemies_of_level = self.curent_enemies_of_level - 1
		msg.post('/player#player', 'current_enemies_count', {current_enemies_count = self.curent_enemies_of_level})
		factory.create(CHEST_FACTORY)
	end

	if message_id == hash('next_level') then
		self.level_of_dungeon = self.level_of_dungeon + 1
		self.enemies_in_levels = math.random(3,5)
		self.curent_enemies_of_level = self.enemies_in_levels
		msg.post('/player#player', 'init_dungeon',{level_of_dungeon = self.level_of_dungeon,enemies_in_levels = self.enemies_in_levels})
		create_random_enemy(self)
	end

	if message_id == hash('end_game') then
		msg.post('#end_game', 'enable')
		msg.post(self.id, 'disable')
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

